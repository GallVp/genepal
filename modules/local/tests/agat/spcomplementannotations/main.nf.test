nextflow_process {

    name "Test Process AGAT_SPCOMPLEMENTANNOTATIONS"
    script "../../../../gallvp/agat/spcomplementannotations/main.nf"
    process "AGAT_SPCOMPLEMENTANNOTATIONS"

    tag "modules"
    tag "modules_nfcore"
    tag "agat"
    tag "agat/spcomplementannotations"

    // Test to show that agat_sp_complement_annotations does not fuse two genes into one
    //
    // Issue #153: <https://github.com/Plant-Food-Research-Open/genepal/issues/153>
    test("Should not fuse two genes into one") {

        when {
            process {
                """
                input[0] = [
                    [id: 'test'],
                    [
                        file("$baseDir" + '/modules/local/tests/agat/spmergeannotations/testdata/file1.gff', checkIfExists: true), // 10 genes
                    ]
                ]
                input[1] = [
                    [],
                    [
                        file("$baseDir" + '/modules/local/tests/agat/spmergeannotations/testdata/file2.gff', checkIfExists: true) // 5 genes
                    ]
                ]
                input[2] = []
                """
            }
        }

        then {
            assert process.success
            assert snapshot(process.out).match()

            def featureLines = file(process.out.gff[0][1]).text.readLines().findAll { ! it.startsWith('#') }
            def geneLines = featureLines.collect { it.split('\t') }.findAll { it[2] == 'gene' }

            with(geneLines) {
                assert size() == 15 // 10 + 5.
            }
        }

    }

}
